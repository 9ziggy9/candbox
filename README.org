* Notes on Low-Level Programming for High-Level Engineers AKA C
#+BEGIN_QUOTE
*DISCLAIMER*:\\

The following is a set of notes on low-level system
programming targetting programmers more accustomed
to the higher-level world of interpreted languages.\\

I am *NOT* an expert in C programming and I can barely
follow any assembler language that is not nasm. This
document may contain many incorrect statements but I
bet you that your GPT4 won't say "mother fucker" in an
introduction, mother fucker.\\

Each day we've worked on this repo will be separated into
branches, if you want to follow sequentially as this repo
has evolved, select the branch by day (day-one) being the
branch corresponding to the state of the repo at the time
of writing this message.\\

Have fun and please feel free to absolutely roast me for
any and all statements.\\
#+HTML: <img src="./media/expert.gif" alt="lawyerings" />
#+END_QUOTE
** References
There is an infinite supply of C programming resources
and I'll note a few here in order of what I feel is the
most helpful.\\
*** [[https://beej.us/guide/bgc/html/][Beej's Guide to C Programming]]
[[https://beej.us/guide/bgnet/html][Beej's Guide to Network Programming]]
is super famous but
this one is just as incredible in my opinion. I wish I had
been aware of thes guides' existence when I first started
writing C. Beej's writing style is incredibly easy to parse
and he has an incredible sense of what students of the C
language tend to struggle with. This guide can be read cover
to cover without any boredom or dullness arising.
*** [[https://beej.us/guide/][Beej's other guides]]
As I mentioned before, Beej's most famous guide is the
Network Programming one but I might as well link his page.
My dude has a way of explaing the things.

*** K&R C
Obviously...
